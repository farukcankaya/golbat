{
  "name": "Golbat",
  "tagline": " Golbat is an Android library that helps you on working with camera, gallery and output and its encoded types. ",
  "body": "![Golbat](https://camo.githubusercontent.com/51aef7a4f69aea7e09cf193e1ed52a58287b1e6c/687474703a2f2f692e696d6775722e636f6d2f4439326a4446662e706e67)\r\n# Golbat\r\nGolbat is an Android library that helps you on working with camera, gallery and output and its encoded types.\r\n\r\n# Quick Start\r\nPut it into your project! In your Gradle file:\r\n```java\r\nrepositories {\r\n    ...\r\n    maven {\r\n        url \"https://jitpack.io\"\r\n    }\r\n}\r\n\r\ndependencies {\r\n    ...\r\n    compile 'com.github.halilkaya:golbat:0.0.1'\r\n}\r\n```\r\n\r\nGolbat deals with storage. So, you need to take perrmissions below first:\r\n```xml\r\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\r\n<uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\r\n```\r\n\r\nTo begin to use Golbat, build it in your `Application` class:\r\n```java\r\nnew Golbat.Builder()\r\n        .setDirectoryName(\"MyPhotos\")\r\n        .setContentResolver(getContentResolver())\r\n        .setCameraRequestCode(200)\r\n        .setImageQuality(100)\r\n        .build();\r\n```\r\n\r\nWell, now let's make a simple app that opens camera app and shows the captured image in an ImageView via Golbat!\r\n\r\nDefine 3 global variables:\r\n```java\r\nprivate Button openCameraApp;\r\nprivate ImageView myImageView;\r\nprivate Uri fileUri;\r\n```\r\n\r\nLet them know who them are in `onCreate` method:\r\n```java\r\nopenCameraApp = (Button) findViewById(R.id.open_camera_app);\r\nmyImageView = (ImageView) findViewById(R.id.my_image_view);\r\n```\r\n\r\nOpen camera app when `openCameraApp` button is pressed in again `onCreate` method:\r\n```java\r\nopenCameraApp.setOnClickListener(new View.OnClickListener() {\r\n    @Override\r\n    public void onClick(View v) {\r\n        fileUri = Golbat.openCamera(MainActivity.this);\r\n    }\r\n});\r\n```\r\n\r\nYeah! Our button opens the camera app! Let's handle the captured image:\r\n```java\r\n@Override\r\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n    if (resultCode == Activity.RESULT_OK && requestCode == 200) {\r\n        Golbat.showImage(\r\n                Golbat.CaptureType.CAPTURED_FROM_CAMERA,\r\n                myImageView,\r\n                fileUri\r\n        );\r\n    }\r\n}\r\n```\r\n\r\nHow does it look? Oh, API wants base64 encoded version? Here you go:\r\n```java\r\nString base64forApi = Golbat.getBase64(\r\n        Golbat.getSelectedImageAsBitmap(fileUri),\r\n        false\r\n);\r\n```\r\n\r\nVoila!\r\n\r\nWant more? Then, see the full [documentation](https://github.com/halilkaya/golbat/wiki/Documentation).\r\n\r\n\r\n# License\r\n```\r\nGolbat is an Android library that helps on working with camera,\r\ngallery and output and its encoded types.\r\nCopyright (C) 2016  Halil Kaya\r\n\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}